   // Created by Lachlan Becker
   // Grade 8
   // Commonly known online as moob453  
   // Made for the Uni SA Stemia camera dolly
   // Purpose is to make a robot follow a black line
   // Must be used on a white or bright envoirment
   // 

   //defining motor pins

   #define MOTOR_L 5
   #define MOTOR_LB 10
   #define MOTOR_R 6
   #define MOTOR_RB 11
   #define MOTOR_VOLT 3
   #define MOTOR_VOLTR 10

   //define sensor pins

   #define LEFT_INFA 12
   #define RIGHT_INFA 13

   void setup() {
    //setting outputs
    pinMode(MOTOR_L, OUTPUT);
    pinMode(MOTOR_LB, OUTPUT);
    pinMode(MOTOR_R, OUTPUT);
    pinMode(MOTOR_RB, OUTPUT);
    pinMode(MOTOR_VOLT, OUTPUT);

    //setting inputs
    pinMode(LEFT_INFA, INPUT);
    pinMode(RIGHT_INFA, INPUT);

    //starting serial communication
    Serial.begin(9600);
   }

void loop() {
    //converting raw signal to value
    int LEFT_VALUE = digitalRead(LEFT_INFA);
    int RIGHT_VALUE = digitalRead(RIGHT_INFA);

    //SETS MOTOR VOLTAGE    255 MAX
    int MOTOR_SPEED = 120;
    analogWrite(MOTOR_VOLT, MOTOR_SPEED - 10);
    analogWrite(MOTOR_VOLTR, MOTOR_SPEED - 10);

    //both detect black activate
    if (RIGHT_VALUE == HIGH && LEFT_VALUE == HIGH) {
        Serial.println("Both black");
        TURN_LEFT();

      //Both detect white activate
    } else if (RIGHT_VALUE == LOW && LEFT_VALUE == LOW) {
        Serial.println("Both white");
        STRAIGHT();

    //left sensed black activate
    } else if (LEFT_VALUE == LOW) {
        Serial.println("Left Black");
        TURN_RIGHT();

    //right sensed black activate
    } else if (RIGHT_VALUE == LOW) {
        Serial.println("Right black");
        TURN_LEFT();

    }
}

   //TURNS ROBOT RIGHT
   void TURN_RIGHT() {
    digitalWrite(MOTOR_L, HIGH);
    digitalWrite(MOTOR_R, LOW);
   }
   
   //TURNS ROBOT LEFT
   void TURN_LEFT() {
    digitalWrite(MOTOR_R, HIGH);
    digitalWrite(MOTOR_L, LOW);
   }
  
   //MAKES ROBOT GO STRAIGHT
   void STRAIGHT() {
    digitalWrite(MOTOR_L, HIGH);
    digitalWrite(MOTOR_L, LOW);
    digitalWrite(MOTOR_R, HIGH);
    digitalWrite(MOTOR_R, LOW);
   }


   //STOP
   void STOP() {
    digitalWrite(MOTOR_L, LOW);
    digitalWrite(MOTOR_R, LOW);
   }







